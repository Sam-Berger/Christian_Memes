{
	"info": {
		"_postman_id": "e4c2a51e-7f0b-4bc2-8388-1a9edff27af7",
		"name": "Christian_Meme_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18967893"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/meme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains memes array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.memes).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/meme",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains tags array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.tags).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/tag",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/meme",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/tag",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/meme/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/tag/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/meme/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/tag/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "christian-meme-user",
			"item": [
				{
					"name": "/meme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains memes array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.memes).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/meme",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains tags array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.tags).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/tag",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Post {{$timestamp}}\",\n    \"url\": \"test.post.{{$timestamp}}.com\",\n    \"tags\": [2]\n}"
						},
						"url": {
							"raw": "{{host}}/meme",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Tag Name {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/tag",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"editTitle\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/meme/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"editTitle\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/tag/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/meme/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/meme/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InRJM0RmdmpfSVVFNUFxbjA1cU5IbyJ9.eyJpc3MiOiJodHRwczovL2Rldi02Z2kweXB5Yi51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMxY2VkYTIyOTA4NTU4NzcyMjZlZjJkIiwiYXVkIjoiY2hyaXN0aWFuLW1lbWUtYXBpIiwiaWF0IjoxNjYzMDkxMTAzLCJleHAiOjE2NjMxNzc1MDMsImF6cCI6IkhPOWtpMnRHT0JLbFMwVzUwOVkyaWZIWUdFZ0l1aVkwIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6bWVtZSIsImdldDp0YWciLCJwb3N0Om1lbWUiLCJwb3N0OnRhZyJdfQ.MKmPV-a_qPSNIL0NHdfm6065vEys04VA71roOGavqX-0pwgVlmVcR5QqnqhpPJ01ufIJwUelqFMTa_5pYBrHUW7wr_brDXACwNcKF5Y8boOOKAKjO59OMNiC5qP5M99Yoc28mpNvInnMh0VI77Po-zSxmO6jnQT98uhZrMOk_orfkzBQ5JhUKzbEdr3x5CxV2DBneyxvgZe9NLDhfkVIoruK-t4B7uUOc9YaoULCR1EHkdd-w1tdNDmoPlBrqNIYaCNjhmnKmBG2OuD0jLDyG4ORPidcpiIMTtXOPKhNjHKSxpDbv_enmtSGP7YJuuwhgXVC3_WrBNOxLZ0bjig_qQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "christian-meme-owner",
			"item": [
				{
					"name": "/meme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains memes array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.memes).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/meme",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains tags array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.tags).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/tag",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Post {{$timestamp}}\",\n    \"url\": \"test.post.{{$timestamp}}.com\",\n    \"tags\": []\n}"
						},
						"url": {
							"raw": "{{host}}/meme",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Tag Name {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/tag",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"editTitle\"\n}"
						},
						"url": {
							"raw": "{{host}}/meme/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"edit_name\"\n}"
						},
						"url": {
							"raw": "{{host}}/tag/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/meme/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/meme/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"meme",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tag/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/tag/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"tag",
								"5"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InRJM0RmdmpfSVVFNUFxbjA1cU5IbyJ9.eyJpc3MiOiJodHRwczovL2Rldi02Z2kweXB5Yi51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMxMGNlMjg4NDAyMjFkMWQyMzE2OWIwIiwiYXVkIjoiY2hyaXN0aWFuLW1lbWUtYXBpIiwiaWF0IjoxNjYzMDkwOTg2LCJleHAiOjE2NjMxNzczODYsImF6cCI6IkhPOWtpMnRHT0JLbFMwVzUwOVkyaWZIWUdFZ0l1aVkwIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJkZWxldGU6bWVtZSIsImRlbGV0ZTp0YWciLCJnZXQ6bWVtZSIsImdldDp0YWciLCJwYXRjaDptZW1lIiwicGF0Y2g6dGFnIiwicG9zdDptZW1lIiwicG9zdDp0YWciXX0.drQlq9JMy-6GNHqK4lYmp9r6ILwS1neJho59Zxr0KC9fEe-sSXxql9Bzx6rjlyMyMzOBbFTkGjbFNwZC1KoYW3yEdcqYuaE0ImqQXwQLcc1MQBqYsxyKAK2bM-L1CpLcooGi8tgehv8nfsdFf1xZW_Xs40gl-BEc7W4Awp48LP-PWNMpLhcSf7AUAmd6fox6qgzGsu2oYvKbBS3VGmDJIS56pfY6CN57TvB5V62S-KtHIDuxDGazLPqd4aDmPk7SWCmqmnPKNMKKSbdCcC-1j01IxBlFnV48A05eWwUzU7don3HKLcIpGnapbio9AMpmqV9RnepnPQUrsSKnFg28CA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://myapp-663697908123456.herokuapp.com/",
			"type": "string"
		}
	]
}